# Stage ECS Container Deployment for Fargate & Lambda
name: Stage Container Deploy

on:
  workflow_call:
    inputs:
      AWS_REGION:
        required: true
        type: string
      GHA_ROLE:
        required: true
        type: string
      ECR:
        required: true
        type: string
      FUNCTION:
        required: false
        type: string
      PREBUILD:
        required: false
        type: string

# Set defaults
defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: Build and Deploy to ECR
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for Python or Ruby
        # Check for the existence of files that set either the Python version or the Ruby version
        # and capture this information for later use in the job. These values are used for
        # conditional steps below to setup/configure the build environment for the container.
        run: |
          if [[ -f ".python-version" ]]; then
            echo "python_repo=1" >> $GITHUB_ENV
          fi
          if [[ -f ".ruby-version" ]]; then
            echo "ruby_repo=1" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCT_STAGE }}:role/${{ inputs.GHA_ROLE }}
          aws-region: ${{ inputs.AWS_REGION }}

      - name: Get Python
        # Run the Python setup only when there is a .python-version file in the root
        # of the repository. Otherwise, this step is skipped.
        if: ${{ env.python_repo == 1 }}
        uses: actions/setup-python@v5
        with:
          architecture: x64

      - name: Get Ruby
        # Run the Ruby setup setup only when there is a .ruby-version file in the 
        # root of the repository. Otherwise, this step is skipped.
        if: ${{ env.ruby_repo == 1 }}
        uses: ruby/setup-ruby@v1

      - name: Run pre-build steps
        # Only run this step if the app developer has specified "pre-build" commands
        # in the caller workflow.
        if: ${{ inputs.PREBUILD != '' }} 
        run: ${{ inputs.PREBUILD }}

      - name: Build container
        run: DOCKER_BUILDKIT=1 docker build --platform linux/amd64 -t ${{ secrets.AWS_ACCT_STAGE }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/${{ inputs.ECR }}:latest -t ${{ secrets.AWS_ACCT_STAGE }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/${{ inputs.ECR }}:`echo $GITHUB_SHA | cut -c 1-8` .

      - name: Push container
        run: |
          docker login -u AWS -p $(aws ecr get-login-password --region ${{ inputs.AWS_REGION }}) ${{ secrets.AWS_ACCT_STAGE }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com
          docker push ${{ secrets.AWS_ACCT_STAGE }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/${{ inputs.ECR }}:latest
          docker push ${{ secrets.AWS_ACCT_STAGE }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/${{ inputs.ECR }}:`echo $GITHUB_SHA | cut -c 1-8`

      - name: Update Lambda Function
        # Only update the Lambda Function if the developer passes in the Lambda Function name
        if: ${{ inputs.FUNCTION != '' }}
        run: aws lambda update-function-code --function-name ${{ inputs.FUNCTION }} --image-uri ${{ secrets.AWS_ACCT_STAGE }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/${{ inputs.ECR }}:latest --query "LastUpdateStatusReasonCode" --output text
